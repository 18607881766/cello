swagger: '2.0'
info:
  title: Cello API Engine Service
  description: "\n    This is swagger docs for Cello API engine.\n    "
  version: v1
basePath: /
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
security:
  - Bearer: []
paths:
  /clusters:
    get:
      operationId: clusters_list
      summary: List Clusters
      description: Filter clusters with query parameters.
      parameters:
        - name: page
          in: query
          description: Page of filter
          required: false
          type: integer
          default: 1
          minimum: 1
        - name: per_page
          in: query
          description: Per Page of filter
          required: false
          type: integer
          default: 10
          maximum: 100
          minimum: 1
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/NetworkListResponse'
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - clusters
    post:
      operationId: clusters_create
      summary: Create Cluster
      description: Create new cluster
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ClusterCreateBody'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ClusterID'
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - clusters
    parameters: []
  /clusters/{id}:
    delete:
      operationId: clusters_delete
      summary: Delete Cluster
      description: Delete cluster
      parameters: []
      responses:
        '204':
          description: No Content
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - clusters
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /clusters/{id}/operations:
    post:
      operationId: clusters_operate
      summary: Operate Cluster
      description: Operate cluster start/stop/restart
      parameters:
        - name: action
          in: query
          description: "\n        Operation for cluster:\n            start\n    \
            \        \n            stop\n            \n            restart\n     \
            \       "
          required: true
          type: string
          enum:
            - start
            - stop
            - restart
      responses:
        '202':
          description: Accepted
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - clusters
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /hosts:
    get:
      operationId: hosts_list
      summary: List Hosts
      description: Filter hosts with query parameters.
      parameters:
        - name: page
          in: query
          description: Page of filter
          required: false
          type: integer
          default: 1
          minimum: 1
        - name: per_page
          in: query
          description: Per Page of filter
          required: false
          type: integer
          default: 10
          maximum: 100
          minimum: 1
        - name: status
          in: query
          description: "\n        \n            0: Stopped\n            \n       \
            \     1: Running\n            \n            2: Error\n            "
          required: false
          type: string
          enum:
            - 0
            - 1
            - 2
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/HostListResponse'
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - hosts
    post:
      operationId: hosts_create
      summary: Create Host
      description: Create new host
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/HostCreateBody'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/HostID'
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - hosts
    parameters: []
  /hosts/{id}:
    put:
      operationId: hosts_update
      summary: Update Host
      description: Update special host with id.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/HostUpdateBody'
      responses:
        '202':
          description: Accepted
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - hosts
    patch:
      operationId: hosts_partial_update
      summary: Partial Update Host
      description: Partial update special host with id.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/HostPatchBody'
      responses:
        '202':
          description: Accepted
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - hosts
    delete:
      operationId: hosts_delete
      summary: Delete Host
      description: Delete host
      parameters: []
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - hosts
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /networks:
    get:
      operationId: networks_list
      summary: List Networks
      description: Filter networks with query parameters.
      parameters:
        - name: page
          in: query
          description: Page of filter
          required: false
          type: integer
          default: 1
          minimum: 1
        - name: per_page
          in: query
          description: Per Page of filter
          required: false
          type: integer
          default: 10
          maximum: 100
        - name: status
          in: query
          description: "\n        \n            0: Stopped\n            \n       \
            \     1: Running\n            \n            2: Error\n            "
          required: false
          type: string
          enum:
            - 0
            - 1
            - 2
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/NetworkListResponse'
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - networks
    parameters: []
  /nodes:
    get:
      operationId: nodes_list
      summary: List Nodes
      description: Filter nodes with query parameters.
      parameters:
        - name: page
          in: query
          description: Page of filter
          required: false
          type: integer
          default: 1
          minimum: 1
        - name: per_page
          in: query
          description: Per Page of filter
          required: false
          type: integer
          default: 10
          maximum: 100
          minimum: 1
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/NetworkListResponse'
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - nodes
    post:
      operationId: nodes_create
      summary: Create Node
      description: Create new node
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/NodeCreateBody'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/NodeID'
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - nodes
    parameters: []
  /nodes/{id}:
    delete:
      operationId: nodes_delete
      summary: Delete Node
      description: Delete node
      parameters: []
      responses:
        '204':
          description: No Content
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - nodes
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /nodes/{id}/operations:
    post:
      operationId: nodes_operate
      summary: Operate Node
      description: Do some operation on node, start/stop/restart
      parameters:
        - name: action
          in: query
          description: "\n        Operation for node:\n            start\n       \
            \     \n            stop\n            \n            restart\n        \
            \    "
          required: true
          type: string
          enum:
            - start
            - stop
            - restart
      responses:
        '202':
          description: Accepted
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - nodes
    parameters:
      - name: id
        in: path
        required: true
        type: string
definitions:
  NetworkResponse:
    required:
      - status
    type: object
    properties:
      status:
        title: Status
        description: "\n        \n            0: Stopped\n            \n         \
          \   1: Running\n            \n            2: Error\n            "
        type: string
        enum:
          - 0
          - 1
          - 2
  NetworkListResponse:
    required:
      - total
      - data
    type: object
    properties:
      total:
        title: Total
        description: Total number of networks
        type: integer
      data:
        type: array
        items:
          $ref: '#/definitions/NetworkResponse'
  BadResponse:
    required:
      - code
    type: object
    properties:
      code:
        title: Code
        description: "\n        Error Codes:\n        \n            20000: Unknown\
          \ Error\n            \n            20001: Validation parameter error\n \
          \           \n            20002: Parse error\n            \n           \
          \ 20003: Resource is inuse\n            "
        type: integer
      detail:
        title: Detail
        description: Error Messages
        type: string
  ClusterCreateBody:
    required:
      - name
      - host_id
      - network_type
      - size
      - consensus_plugin
    type: object
    properties:
      name:
        title: Name
        description: Name of Cluster
        type: string
        maxLength: 36
        minLength: 4
      host_id:
        title: Host id
        description: Host ID
        type: string
        minLength: 1
      network_type:
        title: Network type
        description: "\n        Network Types:\n            fabric1.3\n          \
          \  \n            fabric1.4\n            "
        type: string
        enum:
          - fabric1.3
          - fabric1.4
      size:
        title: Size
        description: Size of cluster
        type: integer
        maximum: 6
        minimum: 2
      consensus_plugin:
        title: Consensus plugin
        description: "\n        Consensus Plugin:\n            solo\n            \n\
          \            kafka\n            "
        type: string
        enum:
          - solo
          - kafka
  ClusterID:
    required:
      - id
    type: object
    properties:
      id:
        title: Id
        description: ID of cluster
        type: string
        minLength: 1
  HostResponse:
    description: Hosts data
    required:
      - id
      - name
      - worker_api
      - capacity
      - log_level
      - type
      - status
      - created_at
      - schedulable
    type: object
    properties:
      id:
        title: Id
        description: ID of Host
        type: string
        minLength: 1
      name:
        title: Name
        description: Name of Host
        type: string
        maxLength: 36
        minLength: 4
      worker_api:
        title: Worker api
        description: API address of worker
        type: string
        maxLength: 128
        minLength: 6
      capacity:
        title: Capacity
        description: Capacity of Host
        type: integer
        minimum: 1
      log_level:
        title: Log level
        description: "\n        Log levels:\n            0: Info\n            \n \
          \           1: Warning\n            \n            2: Debug\n           \
          \ \n            3: Error\n            "
        type: string
        enum:
          - 0
          - 1
          - 2
          - 3
      type:
        title: Type
        description: "\n        Host types:\n            0: Docker\n            \n\
          \            1: Kubernetes\n            "
        type: string
        enum:
          - 0
          - 1
      status:
        title: Status
        description: "\n        \n            0: Stopped\n            \n         \
          \   1: Running\n            \n            2: Error\n            "
        type: string
        enum:
          - 0
          - 1
          - 2
      created_at:
        title: Created at
        description: Create time
        type: string
        format: date-time
      schedulable:
        title: Schedulable
        description: Whether hos can be schedulable
        type: boolean
  HostListResponse:
    required:
      - total
      - data
    type: object
    properties:
      total:
        title: Total
        description: Total number of data
        type: integer
        minimum: 0
      data:
        description: Hosts data
        type: array
        items:
          $ref: '#/definitions/HostResponse'
  HostCreateBody:
    required:
      - name
      - worker_api
      - capacity
      - log_level
      - type
    type: object
    properties:
      name:
        title: Name
        description: Name of Host
        type: string
        maxLength: 36
        minLength: 4
      worker_api:
        title: Worker api
        description: API address of worker
        type: string
        maxLength: 128
        minLength: 6
      capacity:
        title: Capacity
        description: Capacity of Host
        type: integer
        minimum: 1
      log_level:
        title: Log level
        description: "\n        Log levels:\n            0: Info\n            \n \
          \           1: Warning\n            \n            2: Debug\n           \
          \ \n            3: Error\n            "
        type: string
        enum:
          - 0
          - 1
          - 2
          - 3
      type:
        title: Type
        description: "\n        Host types:\n            0: Docker\n            \n\
          \            1: Kubernetes\n            "
        type: string
        enum:
          - 0
          - 1
  HostID:
    required:
      - id
    type: object
    properties:
      id:
        title: Id
        description: ID of Host
        type: string
        minLength: 1
  HostUpdateBody:
    type: object
    properties:
      name:
        title: Name
        description: Name of Host
        type: string
        maxLength: 36
        minLength: 4
        x-nullable: true
      capacity:
        title: Capacity
        description: Capacity of Host
        type: integer
        minimum: 1
        x-nullable: true
      log_level:
        title: Log level
        description: "\n        Log levels:\n            0: Info\n            \n \
          \           1: Warning\n            \n            2: Debug\n           \
          \ \n            3: Error\n            "
        type: string
        enum:
          - 0
          - 1
          - 2
          - 3
        x-nullable: true
      status:
        title: Status
        description: "\n        \n            0: Stopped\n            \n         \
          \   1: Running\n            \n            2: Error\n            "
        type: string
        enum:
          - 0
          - 1
          - 2
        x-nullable: true
  HostPatchBody:
    type: object
    properties:
      name:
        title: Name
        description: Name of Host
        type: string
        maxLength: 36
        minLength: 4
        x-nullable: true
      capacity:
        title: Capacity
        description: Capacity of Host
        type: integer
        minimum: 1
        x-nullable: true
      log_level:
        title: Log level
        description: "\n        Log levels:\n            0: Info\n            \n \
          \           1: Warning\n            \n            2: Debug\n           \
          \ \n            3: Error\n            "
        type: string
        enum:
          - 0
          - 1
          - 2
          - 3
        x-nullable: true
  NodeCreateBody:
    required:
      - network_type
      - type
    type: object
    properties:
      network_type:
        title: Network type
        description: "\n        Network types:\n            fabric1.3\n          \
          \  \n            fabric1.4\n            "
        type: string
        enum:
          - fabric1.3
          - fabric1.4
      type:
        title: Type
        description: "\n        Node Types:\n            ca\n            \n      \
          \      orderer\n            \n            peer\n            "
        type: string
        enum:
          - ca
          - orderer
          - peer
  NodeID:
    required:
      - id
    type: object
    properties:
      id:
        title: Id
        description: ID of node
        type: string
        minLength: 1
